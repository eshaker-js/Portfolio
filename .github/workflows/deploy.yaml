name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-and-push-to-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout # Checkout the code from the repository
        uses: actions/checkout@v4
        if: github.event_name == 'push'
      - name: Setup Docker # Setup Docker
        uses: docker/setup-buildx-action@v2
        if: github.event_name == 'push'
      - name: Login to Docker Hub # Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: github.event_name == 'push'
      - name: Build and push Docker image # Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKER_USERNAME }}/portfolio:latest
          cache-from: type=registry,ref=yourusername/portfolio:latest
          cache-to: type=inline
        if: github.event_name == 'push'
  deploy-on-ec2:
    name: Deploy on EC2
    runs-on: ubuntu-latest
    needs: build-and-push-to-docker
    permissions:
      id-token: write
    steps:
      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: github-actions
      - name: Run Commands on EC2 Instance
        run: |
          aws ssm send-command \
          --document-name "AWS-RunShellScript" \
          --instance-ids ${{ secrets.AWS_EC2_INSTANCE_ID }} \
          --region ${{ secrets.AWS_REGION }} \
          --comment "Deploy application" \
          --parameters 'commands=[
            "sudo docker pull --platform linux/amd64 ${{ secrets.DOCKER_USERNAME }}/portfolio:latest",  
            "sudo docker stop portfolio || true",
            "sudo docker rm portfolio || true",
            "sudo docker run -d \
            --name portfolio \
            --restart unless-stopped \
            -e PORTFOLIO_POST_REQUEST_KEY='${{ secrets.PORTFOLIO_POST_REQUEST_KEY }}' \
            -p 3000:3000 \
            -v /home/ubuntu/portfolio-data:/app/data \
            ${{ secrets.DOCKER_USERNAME }}/portfolio:latest"
          ]' \
          --output text
